{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLoading } from '../LoadingContext';\nexport const useApi = () => {\n  _s();\n  const {\n    startLoading,\n    stopLoading\n  } = useLoading();\n  const apiCall = async (url, options = {}, loadingMessage = 'Loading...') => {\n    try {\n      startLoading(loadingMessage);\n      const response = await fetch(url, {\n        credentials: 'include',\n        // Always include cookies\n        ...options,\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Something went wrong');\n      }\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    } finally {\n      stopLoading();\n    }\n  };\n  const get = (url, loadingMessage = 'Loading...') => {\n    return apiCall(url, {\n      method: 'GET'\n    }, loadingMessage);\n  };\n  const post = (url, body, loadingMessage = 'Saving...') => {\n    return apiCall(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n    }, loadingMessage);\n  };\n  const put = (url, body, loadingMessage = 'Updating...') => {\n    return apiCall(url, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n    }, loadingMessage);\n  };\n  const patch = (url, body, loadingMessage = 'Updating...') => {\n    return apiCall(url, {\n      method: 'PATCH',\n      body: JSON.stringify(body)\n    }, loadingMessage);\n  };\n  const del = (url, loadingMessage = 'Deleting...') => {\n    return apiCall(url, {\n      method: 'DELETE'\n    }, loadingMessage);\n  };\n  return {\n    apiCall,\n    get,\n    post,\n    put,\n    patch,\n    del\n  };\n};\n_s(useApi, \"TX93bJFd0lshJyg003+7Mke5GsQ=\", false, function () {\n  return [useLoading];\n});","map":{"version":3,"names":["useLoading","useApi","_s","startLoading","stopLoading","apiCall","url","options","loadingMessage","response","fetch","credentials","headers","data","json","ok","Error","message","error","console","get","method","post","body","JSON","stringify","put","patch","del"],"sources":["/Users/mac/Desktop/application/EFrontend/src/hooks/useApi.js"],"sourcesContent":["import { useLoading } from '../LoadingContext';\n\nexport const useApi = () => {\n  const { startLoading, stopLoading } = useLoading();\n\n  const apiCall = async (url, options = {}, loadingMessage = 'Loading...') => {\n    try {\n      startLoading(loadingMessage);\n      \n      const response = await fetch(url, {\n        credentials: 'include', // Always include cookies\n        ...options,\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Something went wrong');\n      }\n      \n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    } finally {\n      stopLoading();\n    }\n  };\n\n  const get = (url, loadingMessage = 'Loading...') => {\n    return apiCall(url, { method: 'GET' }, loadingMessage);\n  };\n\n  const post = (url, body, loadingMessage = 'Saving...') => {\n    return apiCall(url, { \n      method: 'POST', \n      body: JSON.stringify(body) \n    }, loadingMessage);\n  };\n\n  const put = (url, body, loadingMessage = 'Updating...') => {\n    return apiCall(url, { \n      method: 'PUT', \n      body: JSON.stringify(body) \n    }, loadingMessage);\n  };\n\n  const patch = (url, body, loadingMessage = 'Updating...') => {\n    return apiCall(url, { \n      method: 'PATCH', \n      body: JSON.stringify(body) \n    }, loadingMessage);\n  };\n\n  const del = (url, loadingMessage = 'Deleting...') => {\n    return apiCall(url, { method: 'DELETE' }, loadingMessage);\n  };\n\n  return {\n    apiCall,\n    get,\n    post,\n    put,\n    patch,\n    del,\n  };\n}; "],"mappings":";AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAE9C,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,YAAY;IAAEC;EAAY,CAAC,GAAGJ,UAAU,CAAC,CAAC;EAElD,MAAMK,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAEC,cAAc,GAAG,YAAY,KAAK;IAC1E,IAAI;MACFL,YAAY,CAACK,cAAc,CAAC;MAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;QAChCK,WAAW,EAAE,SAAS;QAAE;QACxB,GAAGJ,OAAO;QACVK,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,GAAGL,OAAO,CAACK;QACb;MACF,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,sBAAsB,CAAC;MACzD;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb,CAAC,SAAS;MACRd,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMgB,GAAG,GAAGA,CAACd,GAAG,EAAEE,cAAc,GAAG,YAAY,KAAK;IAClD,OAAOH,OAAO,CAACC,GAAG,EAAE;MAAEe,MAAM,EAAE;IAAM,CAAC,EAAEb,cAAc,CAAC;EACxD,CAAC;EAED,MAAMc,IAAI,GAAGA,CAAChB,GAAG,EAAEiB,IAAI,EAAEf,cAAc,GAAG,WAAW,KAAK;IACxD,OAAOH,OAAO,CAACC,GAAG,EAAE;MAClBe,MAAM,EAAE,MAAM;MACdE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CAAC,EAAEf,cAAc,CAAC;EACpB,CAAC;EAED,MAAMkB,GAAG,GAAGA,CAACpB,GAAG,EAAEiB,IAAI,EAAEf,cAAc,GAAG,aAAa,KAAK;IACzD,OAAOH,OAAO,CAACC,GAAG,EAAE;MAClBe,MAAM,EAAE,KAAK;MACbE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CAAC,EAAEf,cAAc,CAAC;EACpB,CAAC;EAED,MAAMmB,KAAK,GAAGA,CAACrB,GAAG,EAAEiB,IAAI,EAAEf,cAAc,GAAG,aAAa,KAAK;IAC3D,OAAOH,OAAO,CAACC,GAAG,EAAE;MAClBe,MAAM,EAAE,OAAO;MACfE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CAAC,EAAEf,cAAc,CAAC;EACpB,CAAC;EAED,MAAMoB,GAAG,GAAGA,CAACtB,GAAG,EAAEE,cAAc,GAAG,aAAa,KAAK;IACnD,OAAOH,OAAO,CAACC,GAAG,EAAE;MAAEe,MAAM,EAAE;IAAS,CAAC,EAAEb,cAAc,CAAC;EAC3D,CAAC;EAED,OAAO;IACLH,OAAO;IACPe,GAAG;IACHE,IAAI;IACJI,GAAG;IACHC,KAAK;IACLC;EACF,CAAC;AACH,CAAC;AAAC1B,EAAA,CApEWD,MAAM;EAAA,QACqBD,UAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}